---
title: "eipes_try"
format: html
editor: visual
---

## Preliminary analyses for EIPES

A very quick summary of some basics

```{r warning = F, message = F}
library(tidyverse)
library(readxl)
eipes_try <- read_excel("~/Downloads/ΕΡΕΥΝΑ ΓΙΑ ΤΗΝ ΙΑΤΡΙΚΗ ΠΑΙΔΕΙΑ ΚΑΙ ΕΡΓΑΣΙΑ (ΕΙΠΕς) (Απαντήσεις).xlsx")

eipes_try <- eipes_try[!is.na(eipes_try$`Χρονική σήμανση`),]

```

```{r}

# data collected so far.
dim(eipes_try)




```

Gender composition

```{r}
# Numbers Gender
table(eipes_try$`Φύλο?`)
# Percentage
prop.table(table(eipes_try$`Φύλο?`))


```

Age composition

```{r}

# Mean Age
mean(eipes_try$Ηλικία)

# Age Histogram
hist(eipes_try$Ηλικία)


```

How many are Trainees vs students

```{r}
# Students vs Trainees
table(eipes_try$`Σε τι κατηγορία ανήκετε ;`)
prop.table(table(eipes_try$`Σε τι κατηγορία ανήκετε ;`))


```

Type of Specialty

```{r}

# Type of Speciality
table(eipes_try$`Ειδικότητα που έχετε επιλέξει?`)


```

Location of speciality

```{r}
# Where being specialised
table(eipes_try$`Κάνετε ειδικότητα στην?`)
```

Data collected by date

```{r}

# Sample POSIXct object
timestamp <- as.POSIXct(eipes_try$`Χρονική σήμανση`)

# Extract the date
eipes_try$date <- format(timestamp, "%Y-%m-%d")

# Determine AM or PM
eipes_try$am_pm <- ifelse(format(timestamp, "%p") == "AM", "AM", "PM")


# Dates and collected data (sorry they are not sorted)
count_per_day_and_time <- tapply(eipes_try$am_pm, list(as.Date(eipes_try$date), eipes_try$am_pm), length)

# names(count_per_day)
# counts <- as.numeric(count_per_day)

df_count_per_day_and_time <- data.frame(count_per_day_and_time)
df_count_per_day_and_time$date <-rownames(df_count_per_day_and_time)

df_count_per_day_and_time_long <- data.frame( 
  
  date = c(df_count_per_day_and_time$date ,
       df_count_per_day_and_time$date), 
  counts= c(df_count_per_day_and_time$AM,
                   df_count_per_day_and_time$PM), 
  
  time_day = c(rep("AM", length(df_count_per_day_and_time$AM)),
               rep("PM", length(df_count_per_day_and_time$AM))
  )
       
)




df_count_per_day_and_time_long %>% 
  ggplot(aes(date, counts, fill = time_day)) +
  geom_col()+
  ggtitle("EIPES: numbers completed per day and time")
```
